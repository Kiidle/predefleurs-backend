# Generated by Django 3.2.20 on 2023-11-25 22:48

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('pp', models.ImageField(blank=True, null=True, upload_to='static/images/uploads/profile')),
                ('first_name', models.CharField(max_length=14)),
                ('last_name', models.CharField(max_length=14)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='authentication_user_set', to='auth.Group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='authentication_user_set', to='auth.Permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Warn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('Falschinformationen', 'Falschinformationen'), ('Missbrauch von Privilegien', 'Missbrauch von Privilegien'), ('Belästigung', 'Belästigung'), ('Cybermobbing', 'Cybermobbing'), ('Cybergrooming', 'Cybergrooming'), ('Whataboutismus', 'Whataboutismus'), ('Relativierung', 'Relativierung'), ('Erpressung', 'Erpressung'), ('Drohung', 'Drohung'), ('Wortwahl', 'Wortwahl'), ('Hassrede', 'Hassrede'), ('Beleidugung', 'Beleidigung'), ('Diskriminierung', 'Diskriminierung'), ('Sexismus', 'Sexismus'), ('Rassismus', 'Rassismus'), ('Faschismus', 'Faschismus'), ('Antisemitismus', 'Antisemitismus'), ('Betrug', 'Betrug'), ('Spam', 'Spam')], default='Hassrede', max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warns', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Salary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(blank=True, null=True)),
                ('date', models.DateTimeField()),
                ('confirmation', models.BooleanField(default=False)),
                ('beneficiary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payrolls', to=settings.AUTH_USER_MODEL)),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='salaries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Reprimant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('reason', models.TextField(max_length=200)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_reprimants', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reprimants', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Personal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(choices=[('Männlich', 'männlich'), ('Weiblich', 'weiblich'), ('Divers', 'divers')], max_length=50)),
                ('nationality', models.CharField(blank=True, max_length=50, null=True)),
                ('citizenship', models.CharField(blank=True, max_length=50, null=True)),
                ('birthdate', models.DateTimeField(null=True)),
                ('contact_mail', models.EmailField(max_length=254)),
                ('contact_mobile', models.CharField(max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personal', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Health',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allergies', models.CharField(blank=True, max_length=50, null=True)),
                ('chronic_diseases', models.CharField(blank=True, max_length=50, null=True)),
                ('medical_treatments', models.CharField(blank=True, max_length=50, null=True)),
                ('medication', models.CharField(blank=True, max_length=50, null=True)),
                ('mental_health', models.CharField(blank=True, max_length=50, null=True)),
                ('vaccines', models.TextField(blank=True, max_length=500, null=True)),
                ('others', models.TextField(blank=True, max_length=200, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='health', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('appearance', models.TextField(max_length=200)),
                ('teamwork', models.TextField(max_length=200)),
                ('helpfulness', models.TextField(max_length=200)),
                ('politeness', models.TextField(max_length=200)),
                ('communication', models.TextField(max_length=200)),
                ('work_quality', models.TextField(max_length=200)),
                ('work_organisation', models.TextField(max_length=200)),
                ('knowledge', models.TextField(max_length=200)),
                ('goals', models.TextField(max_length=200)),
                ('grade', models.FloatField()),
                ('evaluator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluated_feedbacks', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedbacks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('type', models.CharField(choices=[('Lehre', 'lehre'), ('Berufsmaturität', 'berufsmaturität'), ('Fachmaturität', 'fachmaturität'), ('Bachelor-Studium', 'bachelor'), ('Master-Studium', 'master'), ('Diplomstudium', 'diplomstudium'), ('Höhere Fachschule', 'hf'), ('Fachhochschule', 'Fachhochschule'), ('Universität', 'Universität')], max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('institution', models.CharField(max_length=50)),
                ('specialization', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('final_grade', models.CharField(blank=True, max_length=5, null=True)),
                ('grades', models.TextField(blank=True, max_length=200, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verified', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='data', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Criminal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crime', models.CharField(blank=True, max_length=50, null=True)),
                ('judgements', models.TextField(blank=True, max_length=200, null=True)),
                ('date', models.DateTimeField()),
                ('responsible', models.CharField(blank=True, max_length=50, null=True)),
                ('institution', models.CharField(blank=True, max_length=50, null=True)),
                ('nice2know', models.TextField(blank=True, max_length=200, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='criminals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('issuer', models.CharField(max_length=50)),
                ('date', models.DateField()),
                ('expiration', models.DateField()),
                ('certificatenumber', models.IntegerField()),
                ('description', models.TextField(max_length=200)),
                ('level', models.CharField(max_length=10)),
                ('reference', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, choices=[('Schweiz', 'Schweiz')], max_length=50)),
                ('canton', models.CharField(blank=True, choices=[('Aargau', 'Aargau'), ('Appenzell Ausserrhoden', 'Appenzell Ausserrhoden'), ('Appenzell Innerrhoden', 'Appenzell Innerrhoden'), ('Basel-Landschaft', 'Basel-Landschaft'), ('Basel-Stadt', 'Basel-Stadt'), ('Bern', 'Bern'), ('Freiburg', 'Freiburg'), ('Genf', 'Genf'), ('Glarus', 'Glarus'), ('Graubünden', 'Graubünden'), ('Jura', 'Jura'), ('Luzern', 'Luzern'), ('Neuenburg', 'Neuenburg'), ('Nidwalden', 'Nidwalden'), ('Obwalden', 'Obwalden'), ('St. Gallen', 'St. Gallen'), ('Schaffhausen', 'Schaffhausen'), ('Schwyz', 'Schwyz'), ('Solothurn', 'Solothurn'), ('Thurgau', 'Thurgau'), ('Tessin', 'Tessin'), ('Uri', 'Uri'), ('Wallis', 'Wallis'), ('Waadt', 'Waadt'), ('Zug', 'Zug'), ('Zürich', 'Zürich')], max_length=50)),
                ('location', models.CharField(blank=True, max_length=50)),
                ('postalcode', models.IntegerField(blank=True, default=0, null=True)),
                ('street', models.CharField(blank=True, max_length=50)),
                ('housenumber', models.CharField(blank=True, max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Absence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Urlaub', 'urlaub'), ('Krankheit', 'krankheit'), ('Sonstiges', 'sonstiges')], max_length=50)),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('confirmation', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('beneficiary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_absences', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_absences', to=settings.AUTH_USER_MODEL)),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='absences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start'],
            },
        ),
    ]
